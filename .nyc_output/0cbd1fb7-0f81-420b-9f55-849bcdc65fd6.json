{"/var/www/pyski/server/lib/play.ts":{"path":"/var/www/pyski/server/lib/play.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}},"14":{"start":{"line":13,"column":19},"end":{"line":13,"column":40}},"15":{"start":{"line":14,"column":22},"end":{"line":14,"column":46}},"16":{"start":{"line":15,"column":15},"end":{"line":15,"column":32}},"17":{"start":{"line":16,"column":18},"end":{"line":16,"column":38}},"18":{"start":{"line":17,"column":10},"end":{"line":17,"column":31}},"19":{"start":{"line":19,"column":4},"end":{"line":55,"column":7}},"20":{"start":{"line":20,"column":8},"end":{"line":20,"column":77}},"21":{"start":{"line":21,"column":29},"end":{"line":21,"column":43}},"22":{"start":{"line":22,"column":28},"end":{"line":28,"column":9}},"23":{"start":{"line":30,"column":27},"end":{"line":30,"column":29}},"24":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"25":{"start":{"line":31,"column":25},"end":{"line":31,"column":26}},"26":{"start":{"line":31,"column":34},"end":{"line":31,"column":46}},"27":{"start":{"line":32,"column":16},"end":{"line":32,"column":33}},"28":{"start":{"line":34,"column":12},"end":{"line":34,"column":28}},"29":{"start":{"line":36,"column":25},"end":{"line":36,"column":26}},"30":{"start":{"line":37,"column":8},"end":{"line":53,"column":9}},"31":{"start":{"line":38,"column":27},"end":{"line":38,"column":67}},"32":{"start":{"line":39,"column":12},"end":{"line":41,"column":13}},"33":{"start":{"line":40,"column":16},"end":{"line":40,"column":72}},"34":{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},"35":{"start":{"line":43,"column":16},"end":{"line":43,"column":60}},"36":{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},"37":{"start":{"line":46,"column":16},"end":{"line":46,"column":35}},"38":{"start":{"line":48,"column":12},"end":{"line":50,"column":13}},"39":{"start":{"line":49,"column":16},"end":{"line":49,"column":51}},"40":{"start":{"line":51,"column":12},"end":{"line":51,"column":25}},"41":{"start":{"line":52,"column":12},"end":{"line":52,"column":48}},"42":{"start":{"line":54,"column":8},"end":{"line":54,"column":27}},"43":{"start":{"line":57,"column":0},"end":{"line":57,"column":20}},"44":{"start":{"line":59,"column":4},"end":{"line":121,"column":7}},"45":{"start":{"line":60,"column":21},"end":{"line":60,"column":82}},"46":{"start":{"line":61,"column":27},"end":{"line":61,"column":45}},"47":{"start":{"line":62,"column":27},"end":{"line":62,"column":28}},"48":{"start":{"line":63,"column":26},"end":{"line":63,"column":27}},"49":{"start":{"line":64,"column":21},"end":{"line":76,"column":9}},"50":{"start":{"line":77,"column":30},"end":{"line":83,"column":9}},"51":{"start":{"line":78,"column":12},"end":{"line":81,"column":43}},"52":{"start":{"line":82,"column":12},"end":{"line":82,"column":36}},"53":{"start":{"line":84,"column":8},"end":{"line":118,"column":9}},"54":{"start":{"line":85,"column":30},"end":{"line":85,"column":59}},"55":{"start":{"line":86,"column":29},"end":{"line":86,"column":44}},"56":{"start":{"line":87,"column":30},"end":{"line":87,"column":50}},"57":{"start":{"line":88,"column":12},"end":{"line":89,"column":31}},"58":{"start":{"line":89,"column":16},"end":{"line":89,"column":31}},"59":{"start":{"line":90,"column":12},"end":{"line":90,"column":26}},"60":{"start":{"line":91,"column":25},"end":{"line":96,"column":14}},"61":{"start":{"line":97,"column":12},"end":{"line":101,"column":15}},"62":{"start":{"line":102,"column":26},"end":{"line":102,"column":77}},"63":{"start":{"line":103,"column":12},"end":{"line":116,"column":13}},"64":{"start":{"line":104,"column":16},"end":{"line":106,"column":17}},"65":{"start":{"line":105,"column":20},"end":{"line":105,"column":48}},"66":{"start":{"line":107,"column":16},"end":{"line":109,"column":17}},"67":{"start":{"line":108,"column":20},"end":{"line":108,"column":38}},"68":{"start":{"line":110,"column":16},"end":{"line":112,"column":17}},"69":{"start":{"line":111,"column":20},"end":{"line":111,"column":52}},"70":{"start":{"line":115,"column":16},"end":{"line":115,"column":75}},"71":{"start":{"line":117,"column":12},"end":{"line":117,"column":27}},"72":{"start":{"line":119,"column":8},"end":{"line":119,"column":41}},"73":{"start":{"line":120,"column":8},"end":{"line":120,"column":22}},"74":{"start":{"line":123,"column":0},"end":{"line":123,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"play","decl":{"start":{"line":18,"column":9},"end":{"line":18,"column":13}},"loc":{"start":{"line":18,"column":32},"end":{"line":56,"column":1}},"line":18},"8":{"name":"(anonymous_8)","decl":{"start":{"line":19,"column":43},"end":{"line":19,"column":44}},"loc":{"start":{"line":19,"column":56},"end":{"line":55,"column":5}},"line":19},"9":{"name":"createCountArrayForPlayers","decl":{"start":{"line":29,"column":17},"end":{"line":29,"column":43}},"loc":{"start":{"line":29,"column":46},"end":{"line":35,"column":9}},"line":29},"10":{"name":"game","decl":{"start":{"line":58,"column":9},"end":{"line":58,"column":13}},"loc":{"start":{"line":58,"column":52},"end":{"line":122,"column":1}},"line":58},"11":{"name":"(anonymous_11)","decl":{"start":{"line":59,"column":43},"end":{"line":59,"column":44}},"loc":{"start":{"line":59,"column":56},"end":{"line":121,"column":5}},"line":59},"12":{"name":"(anonymous_12)","decl":{"start":{"line":77,"column":30},"end":{"line":77,"column":31}},"loc":{"start":{"line":77,"column":36},"end":{"line":83,"column":9}},"line":77}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":39,"column":12},"end":{"line":41,"column":13}},"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":41,"column":13}},{"start":{"line":39,"column":12},"end":{"line":41,"column":13}}],"line":39},"6":{"loc":{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},"type":"if","locations":[{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},{"start":{"line":42,"column":12},"end":{"line":44,"column":13}}],"line":42},"7":{"loc":{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},"type":"if","locations":[{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},{"start":{"line":45,"column":12},"end":{"line":47,"column":13}}],"line":45},"8":{"loc":{"start":{"line":48,"column":12},"end":{"line":50,"column":13}},"type":"if","locations":[{"start":{"line":48,"column":12},"end":{"line":50,"column":13}},{"start":{"line":48,"column":12},"end":{"line":50,"column":13}}],"line":48},"9":{"loc":{"start":{"line":78,"column":32},"end":{"line":81,"column":41}},"type":"binary-expr","locations":[{"start":{"line":78,"column":32},"end":{"line":78,"column":67}},{"start":{"line":79,"column":16},"end":{"line":79,"column":38}},{"start":{"line":80,"column":16},"end":{"line":80,"column":27}},{"start":{"line":81,"column":16},"end":{"line":81,"column":41}}],"line":78},"10":{"loc":{"start":{"line":88,"column":12},"end":{"line":89,"column":31}},"type":"if","locations":[{"start":{"line":88,"column":12},"end":{"line":89,"column":31}},{"start":{"line":88,"column":12},"end":{"line":89,"column":31}}],"line":88},"11":{"loc":{"start":{"line":103,"column":12},"end":{"line":116,"column":13}},"type":"if","locations":[{"start":{"line":103,"column":12},"end":{"line":116,"column":13}},{"start":{"line":103,"column":12},"end":{"line":116,"column":13}}],"line":103},"12":{"loc":{"start":{"line":104,"column":16},"end":{"line":106,"column":17}},"type":"if","locations":[{"start":{"line":104,"column":16},"end":{"line":106,"column":17}},{"start":{"line":104,"column":16},"end":{"line":106,"column":17}}],"line":104},"13":{"loc":{"start":{"line":107,"column":16},"end":{"line":109,"column":17}},"type":"if","locations":[{"start":{"line":107,"column":16},"end":{"line":109,"column":17}},{"start":{"line":107,"column":16},"end":{"line":109,"column":17}}],"line":107},"14":{"loc":{"start":{"line":110,"column":16},"end":{"line":112,"column":17}},"type":"if","locations":[{"start":{"line":110,"column":16},"end":{"line":112,"column":17}},{"start":{"line":110,"column":16},"end":{"line":112,"column":17}}],"line":110}},"s":{"0":1,"1":188,"2":0,"3":14,"4":188,"5":188,"6":0,"7":0,"8":0,"9":0,"10":202,"11":14,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":2,"20":2,"21":2,"22":2,"23":4,"24":4,"25":4,"26":4,"27":8,"28":4,"29":2,"30":2,"31":8,"32":8,"33":0,"34":8,"35":4,"36":8,"37":4,"38":8,"39":0,"40":8,"41":8,"42":2,"43":1,"44":12,"45":12,"46":12,"47":12,"48":12,"49":12,"50":12,"51":192,"52":192,"53":12,"54":180,"55":180,"56":180,"57":180,"58":91,"59":180,"60":180,"61":180,"62":180,"63":180,"64":180,"65":6,"66":180,"67":6,"68":180,"69":1,"70":0,"71":180,"72":12,"73":12,"74":1},"f":{"0":14,"1":188,"2":0,"3":14,"4":188,"5":0,"6":202,"7":2,"8":2,"9":4,"10":12,"11":12,"12":192},"b":{"0":[1,1,1],"1":[188,0],"2":[14,14],"3":[14,188],"4":[14,14],"5":[0,8],"6":[4,4],"7":[4,4],"8":[0,8],"9":[192,192,186,180],"10":[91,89],"11":[180,0],"12":[6,174],"13":[6,174],"14":[1,179]},"inputSourceMap":{"version":3,"file":"/var/www/pyski/server/lib/play.ts","sources":["/var/www/pyski/server/lib/play.ts"],"names":[],"mappings":"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","sourcesContent":["import { checkWin } from \"./checkWin\"\nimport { GameOptions, getDefaultGameOptions } from \"./gameOptions\"\nimport { createGrid, Grid, isFull, makeMove } from \"./grid\"\nimport { logGame } from \"./logGame\"\nimport { PlayResults, PlayResultSet } from \"./playResults\"\n\nconst _ = require('underscore')\n\nexport async function play(\n  players: Function[],\n  options: GameOptions\n): Promise<PlayResults> {\n  options = _.defaults(options, getDefaultGameOptions())\n\n  const numOfPlayers = players.length\n  const playResults: PlayResults = {\n    playersResults: createCountArrayForPlayers(),\n    playersFaults: createCountArrayForPlayers(),\n    ties: 0,\n    maximumRoundsExceeds: 0,\n    resultSets: [],\n  }\n\n  function createCountArrayForPlayers() {\n    let finalArr = []\n    for (let i = 0, len = numOfPlayers; i < len; i++) {\n      finalArr.push(0)\n    }\n    return finalArr\n  }\n\n  let actualGame = 0\n  while (actualGame < options.NUM_OF_GAMES) {\n    const result: PlayResultSet = await game(players, actualGame, options)\n    if (result.invalidMoveOfPlayer !== null) {\n      playResults.playersFaults[result.invalidMoveOfPlayer]++\n    }\n    if (result.winner !== null) {\n      playResults.playersResults[result.winner]++\n    }\n    if (result.tie) {\n      playResults.ties++\n    }\n    if (result.maxRoundsExceeded) {\n      playResults.maximumRoundsExceeds++\n    }\n\n    actualGame++\n    playResults.resultSets.push(result)\n  }\n\n  return playResults\n}\n\nexport async function game(\n  players: Function[],\n  indexOfFirstPlayer: number,\n  options: GameOptions\n): Promise<PlayResultSet> {\n  const grid: Grid = createGrid(options.GRID_SIZE[0], options.GRID_SIZE[1])\n  let actualPlayer = indexOfFirstPlayer\n  let currentRound = 0\n  let currentMove = 0\n  let result: PlayResultSet = {\n    finished: false,\n    invalidMoveOfPlayer: null,\n    lastGrid: grid,\n    maxRoundsExceeded: false,\n    moveStack: [],\n    playerMarks: [\n      (indexOfFirstPlayer % players.length) + 1,\n      ((indexOfFirstPlayer + 1) % players.length) + 1,\n    ],\n    tie: false,\n    winner: null,\n  }\n\n  const shouldProceed = () => {\n    result.finished = !(\n      result.invalidMoveOfPlayer === null &&\n      result.winner === null &&\n      !result.tie &&\n      !result.maxRoundsExceeded\n    )\n\n    return !result.finished\n  }\n  while (shouldProceed()) {\n    let playerIndex = actualPlayer % players.length\n    let playerMark = playerIndex + 1\n    const curPlayer = players[playerIndex]\n\n    if (playerIndex === 0) currentRound++\n    currentMove++\n    const move = await curPlayer(grid, {\n      mark: playerMark,\n      winningLength: options.WINNING_LEN,\n      currentRound,\n      currentMove,\n    })\n    result.moveStack.push({\n      player: playerIndex,\n      X: move[0],\n      Y: move[1],\n    })\n    const moved = makeMove(grid, move[0], move[1], playerMark)\n    if (moved) {\n      if (checkWin(grid, playerMark, options.WINNING_LEN)) {\n        result.winner = playerIndex\n      }\n      if (isFull(grid)) {\n        result.tie = true\n      }\n      if (actualPlayer + 1 > options.MAX_ROUNDS * players.length) {\n        result.maxRoundsExceeded = true\n      }\n    } else {\n      result.invalidMoveOfPlayer = actualPlayer % players.length\n    }\n    actualPlayer++\n  }\n\n  logGame(result, false)\n\n  return result\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fd5c64d941292b24dfdd0c8f0bf7f10c9ec3953e","contentHash":"ff0907c9bb85ee5408cf009385671cb453eb37f7a2b16deccca94a4d8f93bdbb"},"/var/www/pyski/server/lib/checkWin.ts":{"path":"/var/www/pyski/server/lib/checkWin.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":73}},"3":{"start":{"line":8,"column":4},"end":{"line":36,"column":5}},"4":{"start":{"line":8,"column":17},"end":{"line":8,"column":18}},"5":{"start":{"line":9,"column":8},"end":{"line":35,"column":9}},"6":{"start":{"line":9,"column":21},"end":{"line":9,"column":22}},"7":{"start":{"line":10,"column":12},"end":{"line":34,"column":13}},"8":{"start":{"line":11,"column":33},"end":{"line":11,"column":37}},"9":{"start":{"line":12,"column":16},"end":{"line":15,"column":17}},"10":{"start":{"line":12,"column":29},"end":{"line":12,"column":30}},"11":{"start":{"line":13,"column":20},"end":{"line":14,"column":43}},"12":{"start":{"line":14,"column":24},"end":{"line":14,"column":43}},"13":{"start":{"line":16,"column":37},"end":{"line":16,"column":41}},"14":{"start":{"line":17,"column":16},"end":{"line":20,"column":17}},"15":{"start":{"line":17,"column":29},"end":{"line":17,"column":30}},"16":{"start":{"line":18,"column":20},"end":{"line":19,"column":47}},"17":{"start":{"line":19,"column":24},"end":{"line":19,"column":47}},"18":{"start":{"line":21,"column":32},"end":{"line":21,"column":36}},"19":{"start":{"line":22,"column":16},"end":{"line":25,"column":17}},"20":{"start":{"line":22,"column":29},"end":{"line":22,"column":30}},"21":{"start":{"line":23,"column":20},"end":{"line":24,"column":42}},"22":{"start":{"line":24,"column":24},"end":{"line":24,"column":42}},"23":{"start":{"line":26,"column":36},"end":{"line":26,"column":40}},"24":{"start":{"line":27,"column":16},"end":{"line":30,"column":17}},"25":{"start":{"line":27,"column":29},"end":{"line":27,"column":30}},"26":{"start":{"line":28,"column":20},"end":{"line":29,"column":46}},"27":{"start":{"line":29,"column":24},"end":{"line":29,"column":46}},"28":{"start":{"line":31,"column":16},"end":{"line":33,"column":17}},"29":{"start":{"line":32,"column":20},"end":{"line":32,"column":32}},"30":{"start":{"line":37,"column":4},"end":{"line":37,"column":17}},"31":{"start":{"line":39,"column":0},"end":{"line":39,"column":28}}},"fnMap":{"0":{"name":"checkWin","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":17}},"loc":{"start":{"line":4,"column":48},"end":{"line":38,"column":1}},"line":4},"1":{"name":"isCorrectPosition","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":30}},"loc":{"start":{"line":5,"column":37},"end":{"line":7,"column":5}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":31},"end":{"line":4,"column":46}},"type":"default-arg","locations":[{"start":{"line":4,"column":45},"end":{"line":4,"column":46}}],"line":4},"1":{"loc":{"start":{"line":6,"column":15},"end":{"line":6,"column":72}},"type":"binary-expr","locations":[{"start":{"line":6,"column":15},"end":{"line":6,"column":21}},{"start":{"line":6,"column":25},"end":{"line":6,"column":40}},{"start":{"line":6,"column":44},"end":{"line":6,"column":50}},{"start":{"line":6,"column":54},"end":{"line":6,"column":72}}],"line":6},"2":{"loc":{"start":{"line":10,"column":12},"end":{"line":34,"column":13}},"type":"if","locations":[{"start":{"line":10,"column":12},"end":{"line":34,"column":13}},{"start":{"line":10,"column":12},"end":{"line":34,"column":13}}],"line":10},"3":{"loc":{"start":{"line":13,"column":20},"end":{"line":14,"column":43}},"type":"if","locations":[{"start":{"line":13,"column":20},"end":{"line":14,"column":43}},{"start":{"line":13,"column":20},"end":{"line":14,"column":43}}],"line":13},"4":{"loc":{"start":{"line":13,"column":24},"end":{"line":13,"column":80}},"type":"binary-expr","locations":[{"start":{"line":13,"column":24},"end":{"line":13,"column":52}},{"start":{"line":13,"column":56},"end":{"line":13,"column":80}}],"line":13},"5":{"loc":{"start":{"line":18,"column":20},"end":{"line":19,"column":47}},"type":"if","locations":[{"start":{"line":18,"column":20},"end":{"line":19,"column":47}},{"start":{"line":18,"column":20},"end":{"line":19,"column":47}}],"line":18},"6":{"loc":{"start":{"line":18,"column":24},"end":{"line":18,"column":88}},"type":"binary-expr","locations":[{"start":{"line":18,"column":24},"end":{"line":18,"column":56}},{"start":{"line":18,"column":60},"end":{"line":18,"column":88}}],"line":18},"7":{"loc":{"start":{"line":23,"column":20},"end":{"line":24,"column":42}},"type":"if","locations":[{"start":{"line":23,"column":20},"end":{"line":24,"column":42}},{"start":{"line":23,"column":20},"end":{"line":24,"column":42}}],"line":23},"8":{"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":80}},"type":"binary-expr","locations":[{"start":{"line":23,"column":24},"end":{"line":23,"column":52}},{"start":{"line":23,"column":56},"end":{"line":23,"column":80}}],"line":23},"9":{"loc":{"start":{"line":28,"column":20},"end":{"line":29,"column":46}},"type":"if","locations":[{"start":{"line":28,"column":20},"end":{"line":29,"column":46}},{"start":{"line":28,"column":20},"end":{"line":29,"column":46}}],"line":28},"10":{"loc":{"start":{"line":28,"column":24},"end":{"line":28,"column":88}},"type":"binary-expr","locations":[{"start":{"line":28,"column":24},"end":{"line":28,"column":56}},{"start":{"line":28,"column":60},"end":{"line":28,"column":88}}],"line":28},"11":{"loc":{"start":{"line":31,"column":16},"end":{"line":33,"column":17}},"type":"if","locations":[{"start":{"line":31,"column":16},"end":{"line":33,"column":17}},{"start":{"line":31,"column":16},"end":{"line":33,"column":17}}],"line":31},"12":{"loc":{"start":{"line":31,"column":20},"end":{"line":31,"column":78}},"type":"binary-expr","locations":[{"start":{"line":31,"column":20},"end":{"line":31,"column":30}},{"start":{"line":31,"column":34},"end":{"line":31,"column":48}},{"start":{"line":31,"column":52},"end":{"line":31,"column":61}},{"start":{"line":31,"column":65},"end":{"line":31,"column":78}}],"line":31}},"s":{"0":1,"1":1,"2":13248,"3":180,"4":180,"5":768,"6":768,"7":3516,"8":828,"9":828,"10":828,"11":3312,"12":2784,"13":828,"14":828,"15":828,"16":3312,"17":2844,"18":828,"19":828,"20":828,"21":3312,"22":3084,"23":828,"24":828,"25":828,"26":3312,"27":2730,"28":828,"29":6,"30":174,"31":1},"f":{"0":180,"1":13248},"b":{"0":[0],"1":[13248,11304,7968,7968],"2":[828,2688],"3":[2784,528],"4":[3312,1644],"5":[2844,468],"6":[3312,1368],"7":[3084,228],"8":[3312,2298],"9":[2730,582],"10":[3312,1200],"11":[6,822],"12":[828,828,828,828]},"inputSourceMap":{"version":3,"file":"/var/www/pyski/server/lib/checkWin.ts","sources":["/var/www/pyski/server/lib/checkWin.ts"],"names":[],"mappings":";;;AAQA,SAAgB,QAAQ,CACtB,IAAU,EACV,KAAa,EACb,cAAsB,CAAC;IAEvB,SAAS,iBAAiB,CAAC,CAAS,EAAE,CAAS;QAC7C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAA;IAClE,CAAC;IAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;gBAExB,IAAI,UAAU,GAAG,IAAI,CAAA;gBACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;oBACpC,IAAI,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK;wBAC1D,UAAU,GAAG,KAAK,CAAA;iBACrB;gBAGD,IAAI,cAAc,GAAG,IAAI,CAAA;gBACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;oBACpC,IAAI,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK;wBAClE,cAAc,GAAG,KAAK,CAAA;iBACzB;gBAGD,IAAI,SAAS,GAAG,IAAI,CAAA;gBACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;oBACpC,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK;wBAC1D,SAAS,GAAG,KAAK,CAAA;iBACpB;gBAGD,IAAI,aAAa,GAAG,IAAI,CAAA;gBACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;oBACpC,IAAI,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK;wBAClE,aAAa,GAAG,KAAK,CAAA;iBACxB;gBAED,IAAI,UAAU,IAAI,cAAc,IAAI,SAAS,IAAI,aAAa,EAAE;oBAC9D,OAAO,IAAI,CAAA;iBACZ;aACF;SACF;KACF;IACD,OAAO,KAAK,CAAA;AACd,CAAC;AA/CD,4BA+CC","sourcesContent":["import { Grid } from \"./grid\"\n\n/**\n *\n * @param  {int[][]} grid\n * @param  {int} value value which we investigate of winning\n * @return {boolean}\n */\nexport function checkWin(\n  grid: Grid,\n  value: number,\n  WINNING_LEN: number = 5\n): boolean {\n  function isCorrectPosition(x: number, y: number): boolean {\n    return x >= 0 && x < grid.length && y >= 0 && y < grid[x].length\n  }\n\n  for (let y = 0; y < grid.length; y++) {\n    for (let x = 0; x < grid[0].length; x++) {\n      if (grid[y][x] === value) {\n        //go to right\n        let rightFound = true\n        for (let i = 1; i < WINNING_LEN; i++) {\n          if (!isCorrectPosition(x + i, y) || grid[y][x + i] !== value)\n            rightFound = false\n        }\n\n        //go to right-down\n        let rightDownFound = true\n        for (let i = 1; i < WINNING_LEN; i++) {\n          if (!isCorrectPosition(x + i, y + i) || grid[y + i][x + i] !== value)\n            rightDownFound = false\n        }\n\n        //go down\n        let downFound = true\n        for (let i = 1; i < WINNING_LEN; i++) {\n          if (!isCorrectPosition(x, y + i) || grid[y + i][x] !== value)\n            downFound = false\n        }\n\n        //go left-down\n        let leftDownFound = true\n        for (let i = 1; i < WINNING_LEN; i++) {\n          if (!isCorrectPosition(x - i, y + i) || grid[y + i][x - i] !== value)\n            leftDownFound = false\n        }\n\n        if (rightFound || rightDownFound || downFound || leftDownFound) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"559191278b2d121eecc67ee3b346d1728b12b659","contentHash":"370279c91d242ff95fc2992376380fba0a88293bc3a23ee2729b55e5a6a6f95a"},"/var/www/pyski/server/lib/gameOptions.ts":{"path":"/var/www/pyski/server/lib/gameOptions.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":5,"column":4},"end":{"line":11,"column":6}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":54}}},"fnMap":{"0":{"name":"getDefaultGameOptions","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":30}},"loc":{"start":{"line":4,"column":33},"end":{"line":12,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":2,"3":1},"f":{"0":2},"b":{},"inputSourceMap":{"version":3,"file":"/var/www/pyski/server/lib/gameOptions.ts","sources":["/var/www/pyski/server/lib/gameOptions.ts"],"names":[],"mappings":";;;AAQA,SAAgB,qBAAqB;IACnC,OAAO;QACL,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACnB,YAAY,EAAE,CAAC;QACf,WAAW,EAAE,CAAC;QACd,OAAO,EAAE,IAAI;QACb,UAAU,EAAE,GAAG;KAChB,CAAA;AACH,CAAC;AARD,sDAQC","sourcesContent":["export interface GameOptions {\n  GRID_SIZE: [number, number];\n  NUM_OF_GAMES: number;\n  WINNING_LEN: number;\n  TIMEOUT: number;\n  MAX_ROUNDS: number;\n}\n\nexport function getDefaultGameOptions(): GameOptions {\n  return {\n    GRID_SIZE: [20, 20],\n    NUM_OF_GAMES: 5,\n    WINNING_LEN: 5,\n    TIMEOUT: 5000,\n    MAX_ROUNDS: 750,\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"26935bebd036273087025056e029dddad4907546","contentHash":"7c0e890f63ea71954dce1e6535361a8619088866627e0e0849d8d6c61c77ebe6"},"/var/www/pyski/server/lib/grid.ts":{"path":"/var/www/pyski/server/lib/grid.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":106}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":23}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"4":{"start":{"line":7,"column":4},"end":{"line":11,"column":35}},"5":{"start":{"line":9,"column":19},"end":{"line":11,"column":33}},"6":{"start":{"line":11,"column":19},"end":{"line":11,"column":32}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":32}},"8":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"9":{"start":{"line":16,"column":8},"end":{"line":16,"column":21}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":23}},"11":{"start":{"line":19,"column":4},"end":{"line":19,"column":16}},"12":{"start":{"line":21,"column":0},"end":{"line":21,"column":28}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":56}},"14":{"start":{"line":25,"column":0},"end":{"line":25,"column":24}},"15":{"start":{"line":27,"column":4},"end":{"line":30,"column":11}},"16":{"start":{"line":28,"column":8},"end":{"line":28,"column":52}},"17":{"start":{"line":28,"column":34},"end":{"line":28,"column":40}},"18":{"start":{"line":29,"column":8},"end":{"line":29,"column":29}},"19":{"start":{"line":32,"column":0},"end":{"line":32,"column":28}}},"fnMap":{"0":{"name":"createGrid","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":19}},"loc":{"start":{"line":6,"column":35},"end":{"line":12,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":13},"end":{"line":9,"column":14}},"loc":{"start":{"line":9,"column":19},"end":{"line":11,"column":33}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":13},"end":{"line":11,"column":14}},"loc":{"start":{"line":11,"column":19},"end":{"line":11,"column":32}},"line":11},"3":{"name":"makeMove","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":17}},"loc":{"start":{"line":14,"column":37},"end":{"line":20,"column":1}},"line":14},"4":{"name":"isFull","decl":{"start":{"line":22,"column":9},"end":{"line":22,"column":15}},"loc":{"start":{"line":22,"column":22},"end":{"line":24,"column":1}},"line":22},"5":{"name":"toString","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":17}},"loc":{"start":{"line":26,"column":24},"end":{"line":31,"column":1}},"line":26},"6":{"name":"(anonymous_6)","decl":{"start":{"line":27,"column":23},"end":{"line":27,"column":24}},"loc":{"start":{"line":27,"column":40},"end":{"line":30,"column":5}},"line":27},"7":{"name":"(anonymous_7)","decl":{"start":{"line":28,"column":27},"end":{"line":28,"column":28}},"loc":{"start":{"line":28,"column":34},"end":{"line":28,"column":40}},"line":28}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},{"start":{"line":15,"column":4},"end":{"line":17,"column":5}}],"line":15}},"s":{"0":1,"1":1,"2":1,"3":1,"4":12,"5":48,"6":204,"7":1,"8":180,"9":0,"10":180,"11":180,"12":1,"13":180,"14":1,"15":180,"16":792,"17":3636,"18":792,"19":1},"f":{"0":12,"1":48,"2":204,"3":180,"4":180,"5":180,"6":792,"7":3636},"b":{"0":[0,180]},"inputSourceMap":{"version":3,"file":"/var/www/pyski/server/lib/grid.ts","sources":["/var/www/pyski/server/lib/grid.ts"],"names":[],"mappings":";;;AAAA,MAAM,aAAa,GAAG,CAAC,CAAA;AAEV,QAAA,YAAY,GAAG,aAAa,CAAC;AAG1C,SAAgB,UAAU,CAAC,KAAa,EAAE,MAAc;IACtD,OAAO,KAAK,CAAC,MAAM,CAAC;SACjB,IAAI,CAAC,CAAC,CAAC;SACP,GAAG,CAAC,GAAG,EAAE,CACR,KAAK,CAAC,KAAK,CAAC;SACT,IAAI,CAAC,CAAC,CAAC;SACP,GAAG,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,CAC5B,CAAA;AACL,CAAC;AARD,gCAQC;AAED,SAAgB,QAAQ,CACtB,IAAU,EACV,CAAS,EACT,CAAS,EACT,KAAa;IAEb,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,aAAa,EAAE;QAChC,OAAO,KAAK,CAAA;KACb;IAED,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAA;IAClB,OAAO,IAAI,CAAA;AACb,CAAC;AAZD,4BAYC;AAED,SAAgB,MAAM,CAAC,IAAU;IAC/B,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,aAAa,EAAE,CAAC,CAAA;AACrD,CAAC;AAFD,wBAEC;AAED,SAAgB,QAAQ,CAAC,IAAU;IACjC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,GAAa,EAAE,EAAE;QAC3C,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAS,EAAU,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA;QAC3D,OAAO,GAAG,MAAM,IAAI,CAAA;IACtB,CAAC,EAAE,EAAE,CAAC,CAAA;AAER,CAAC;AAND,4BAMC","sourcesContent":["const DEFAULT_VALUE = 0\n\nexport const defaultValue = DEFAULT_VALUE;\nexport type Grid = number[][];\n\nexport function createGrid(width: number, height: number): Grid {\n  return Array(height)\n    .fill(0)\n    .map(() =>\n      Array(width)\n        .fill(0)\n        .map(() => DEFAULT_VALUE),\n    )\n}\n\nexport function makeMove(\n  grid: Grid,\n  x: number,\n  y: number,\n  value: number\n): boolean {\n  if (grid[y][x] !== DEFAULT_VALUE) {\n    return false\n  }\n\n  grid[y][x] = value\n  return true\n}\n\nexport function isFull(grid: Grid): boolean {\n  return !toString(grid).includes(`${DEFAULT_VALUE}`)\n}\n\nexport function toString(grid: Grid): string {\n  return grid.reduce((result, row: number[]) => {\n    result += (row.map((i: number): string => `${i}`).join(''))\n    return `${result}\\n`\n  }, '')\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"120adde6893455f005ad0e10d01b0eb97273f295","contentHash":"ba8e2d901509740ad622094fe139fe0d7c80b7c5e262bfdddf89f66e6131d4a5"},"/var/www/pyski/server/lib/logGame.ts":{"path":"/var/www/pyski/server/lib/logGame.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":5,"column":4},"end":{"line":9,"column":5}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":81}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":38}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":41}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":26}}},"fnMap":{"0":{"name":"logGame","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":16}},"loc":{"start":{"line":4,"column":44},"end":{"line":10,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":4},"end":{"line":9,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":9,"column":5}},{"start":{"line":5,"column":4},"end":{"line":9,"column":5}}],"line":5}},"s":{"0":1,"1":1,"2":12,"3":0,"4":0,"5":0,"6":1},"f":{"0":12},"b":{"0":[0,12]},"inputSourceMap":{"version":3,"file":"/var/www/pyski/server/lib/logGame.ts","sources":["/var/www/pyski/server/lib/logGame.ts"],"names":[],"mappings":";;;AAEA,SAAgB,OAAO,CAAC,UAAyB,EAAE,aAAsB;IACvE,IAAI,aAAa,EAAE;QACjB,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,UAAU,CAAC,mBAAmB,CAAC,CAAA;QACxE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAA;QAC7B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAA;KACjC;AACH,CAAC;AAND,0BAMC","sourcesContent":["import { PlayResultSet } from \"./playResults\"\n\nexport function logGame(playResult: PlayResultSet, printToStdout: boolean) {\n  if (printToStdout) {\n    console.log('game invalidMoveOfPlayer:', playResult.invalidMoveOfPlayer)\n    console.log('game lastGrid:')\n    console.log(playResult.lastGrid)\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0f6e94bdc8496c695554ce6d54682bde2df21d95","contentHash":"80eecdb61d8619ed0ee4fa920717c81af912f55db23f2e4a0164ce854a06c681"},"/var/www/pyski/server/lib/players/dummy.js":{"path":"/var/www/pyski/server/lib/players/dummy.js","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":11,"column":1}},"1":{"start":{"line":6,"column":2},"end":{"line":10,"column":3}},"2":{"start":{"line":6,"column":15},"end":{"line":6,"column":16}},"3":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":18}},"5":{"start":{"line":8,"column":6},"end":{"line":8,"column":41}},"6":{"start":{"line":8,"column":28},"end":{"line":8,"column":41}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":18}},"loc":{"start":{"line":5,"column":49},"end":{"line":11,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":41}},"type":"if","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":41}},{"start":{"line":8,"column":6},"end":{"line":8,"column":41}}],"line":8}},"s":{"0":1,"1":180,"2":180,"3":438,"4":438,"5":1656,"6":180},"f":{"0":180},"b":{"0":[180,1476]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c269afc28c7cee7a641f01e739792c8686fc0287","contentHash":"e5e61d3f821b71f8d86531deabd07fd5589a14c633f2872de9fa191f0fe93bc0"}}